
library ieee;
  use ieee.std_logic_1164.all;
  use ieee.numeric_std.all;

----------------------------------------------------------
-- Entity declaration for N-bit counter
----------------------------------------------------------

entity cnt_up_down is
  generic (
    N_BITS : natural := 8 --! Default number of counter bits
  );
  port (
    clk    : in    std_logic; --! Main clock
    rst    : in    std_logic; --! Synchronous reset
    en     : in    std_logic; --! Enable input
    cnt_up : in    std_logic; --! left
    cnt_down : in std_logic; -- right
    stop   : in std_logic;
    cnt    : out   std_logic_vector(N_BITS - 1 downto 0) := b"1000_0000" --! 150
  );
end entity cnt_up_down;



architecture behavioral of cnt_up_down is

  signal sig_cnt : unsigned(N_BITS - 1 downto 0) := b"1000_0000"; --! Local counter

begin
  p_cnt_up_down : process (clk) is
  begin
    if (rising_edge(clk)) then
            if rst = '1' then 
                sig_cnt <= b"1000_0000";
            elsif en = '1' then
                if (cnt_up = '1' and sig_cnt < b"1111_1010") then -- do prava a pokud není sig_cnt < 250
                    sig_cnt <= sig_cnt + 1 ;
                end if;
                if (cnt_down = '1' and sig_cnt > b"0011_0010") then-- do leva a pokud není sig_cnt < 50
                    sig_cnt <= sig_cnt - 1;
                end if;
            end if;
    end if;
                

  end process p_cnt_up_down;

  cnt <= std_logic_vector(sig_cnt);

end architecture behavioral;
