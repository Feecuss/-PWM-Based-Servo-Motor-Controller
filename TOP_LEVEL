library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity top_level is
    Port ( clk100MHz : in STD_LOGIC;
           BTNC : in std_logic;
           sw1 : in STD_LOGIC;
           sw2 : in std_logic;
           rst : in STD_LOGIC;
           servou_out : out STD_LOGIC;
           led1 : out std_logic;
           led2 : out std_logic
           );

end top_level;

architecture Behavioral of top_level is
--components
component PWM_generator
generic (
   N : integer := 8;
   COUNT_END : integer := 500
);
port (
           clk : in STD_LOGIC;
           clk_slow : in std_logic;
           rst : in STD_LOGIC;
           en : in STD_LOGIC;
           pos : in STD_LOGIC_VECTOR(7 downto 0);
           pwm : out STD_LOGIC
);
end component;

component clock_enable_fast
generic (
    N1_PERIODS : integer
);
port (
           clk      : in STD_LOGIC;
           rst      : in STD_LOGIC;
           pulse_fast    : out STD_LOGIC
);
end component;

component clock_enable_slow
generic (
    N2_PERIODS : integer
);
port (
           clk      : in STD_LOGIC;
           rst      : in STD_LOGIC;
           pulse_slow    : out STD_LOGIC
);
end component;

component cnt_up_down
generic (
    N_BITS : natural := 8
);
port (
    clk    : in    std_logic; --! Main clock
    rst    : in    std_logic; --! Synchronous reset
    en     : in    std_logic; --! Enable input
    cnt_up : in    std_logic; --! left
    cnt_down : in std_logic; -- right
    cnt    : out   std_logic_vector(N_BITS - 1 downto 0) := b"1000_0000" --! 150
);
end component;

signal sig_50Hz : std_logic;
signal sig_fast : std_logic;
signal sig_pos : std_logic_vector(7 downto 0);

begin

fast : clock_enable_fast
generic map (
   N1_PERIODS => 6
)
port map (
   clk => clk100MHz,
   rst => BTNC,
   pulse_fast => sig_fast
);

slow : clock_enable_slow
generic map (
   N2_PERIODS => 2000000
)
port map (
   clk => clk100MHz,
   rst => BTNC,
   pulse_slow => sig_50Hz
);

positionig : cnt_up_down
port map (
   clk => sig_fast,
   rst => BTNC,
   en => '1',
   cnt_up => sw1,
   cnt_down => sw2,
   cnt => sig_pos
    );

pwm : PWM_generator
generic map (
   COUNT_END => 500,
   N => 8
);
port map (
   clk => sig_50Hz,
   rst => BTNC,
   en => '1',
   pos => sig_pos,
   pwm => servo_out
   
);
    
    led1 <= sw1;
    led2 <= sw2;
end Behavioral;
